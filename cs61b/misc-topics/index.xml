<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://notes.bencuan.me/cs61b/misc-topics/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://notes.bencuan.me/cs61b/misc-topics/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://notes.bencuan.me/cs61b/misc-topics/exceptions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.bencuan.me/cs61b/misc-topics/exceptions/</guid><description>Exceptions # Basics # An exception occurs when something unintended occurs and the interpreter must exit.
While this might sound like a bad thing, we can often throw our own exceptions to handle known errors or edge cases more gracefully.
Exceptions in Java # In Java, there are two types of exceptions: checked and unchecked.
Checked exceptions are handled during compile time, and are included in the method declaration.</description></item><item><title/><link>https://notes.bencuan.me/cs61b/misc-topics/modular-arithmetic/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.bencuan.me/cs61b/misc-topics/modular-arithmetic/</guid><description>Modular Arithmetic and Bit Manipulation # {% hint style=&amp;ldquo;warning&amp;rdquo; %} Make sure you&amp;rsquo;re comfortable working with binary numbers (adding, subtracting, converting to decimal) before continuing. {% endhint %}
Integer Types # This is an excerpt from the chart in Java Objects. Go there to review primitive types first!
Type Bits Signed Literals byte 8 yes 3, (int)17 short 16 yes None - must cast from int char 16 no &amp;lsquo;a&amp;rsquo;, &amp;lsquo;\n&amp;rsquo; int 32 yes 123, 0100 (octal), 0xff (hex) long 64 yes 123L, 0100L, 0xffL Signed Numbers # A type is signed if it can be positive or negative.</description></item><item><title/><link>https://notes.bencuan.me/cs61b/misc-topics/more-resources/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.bencuan.me/cs61b/misc-topics/more-resources/</guid><description>More Resources # Here are some more cool things to look at!
Big O Cheat Sheet - complexities of sorting and common data structure operations Toptal Sorting Algorithm Animations - animations, pseudocode, and property summaries Josh Hug&amp;rsquo;s 61B Playlist - concise video lectures for most 61B topics Balanced Search Demos - play around with balanced search structures and see how they work</description></item></channel></rss>