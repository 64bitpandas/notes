<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>https://notes.bencuan.me/cs61b/algorithms/searching/</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://notes.bencuan.me/cs61b/algorithms/searching/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://notes.bencuan.me/cs61b/algorithms/searching/binary-search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.bencuan.me/cs61b/algorithms/searching/binary-search/</guid><description>Binary Search # Binary search is a way of finding a specific node in a tree. It only works on binary trees due to its helpful sorted property. It simply traverses the tree, moving left if the current node is too large or right if it is too small.
Binary search runs in $\Theta(\log(n))$ time for bushy trees, which is also the number of layers in a tree.
The Algorithm # public BST find(BST T, Key sk) { if (T == null) { return null; } if (sk.</description></item><item><title>Breadth First Search (DFS)</title><link>https://notes.bencuan.me/cs61b/algorithms/searching/breadth-first-search-bfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.bencuan.me/cs61b/algorithms/searching/breadth-first-search-bfs/</guid><description>Breadth First Search (BFS), like Depth First Search (DFS), is a method of traversing a graph. BFS simply traverses in a different order, but otherwise is very similar to DFS.
The main difference is that BFS visits all children before any subgraphs. In a tree, we call this level order.
For the example tree above, a level order traversal would go in this order: D B F A C E G.</description></item><item><title>Depth First Search (DFS)</title><link>https://notes.bencuan.me/cs61b/algorithms/searching/depth-first-search-dfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://notes.bencuan.me/cs61b/algorithms/searching/depth-first-search-dfs/</guid><description>Depth First Traversal # Before we move on to searching, let&amp;rsquo;s talk about traversing. Traversal is the act of visiting nodes in a specific order. This can be done either in trees or in graphs.
For trees in particular, there are three main ways to traverse.
The first way is inorder traversal, which visits all left children, then the node itself, then all right children. The end result should be that the nodes were visited in sorted order.</description></item></channel></rss>